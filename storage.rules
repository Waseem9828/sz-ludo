rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    
    // Default deny all
    match /{allPaths=**} {
      allow read, write: if false;
    }

    // Allow public read on banners folder
    match /banners/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.role == 'superadmin';
    }
    
    // Allow public read on tournaments folder
    match /tournaments/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.role == 'superadmin';
    }

    // Deposit screenshots: A user can only write to their own folder.
    match /deposits/{userId}/{fileName} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Game screenshots: A user can only write if they are part of the game.
    // This requires game data access, which is complex. A simpler rule is to allow any logged-in user to write.
    // We will rely on secure signed URLs or direct path validation in code.
    // For now, allow any authenticated user to write.
    match /screenshots/{gameId}/{fileName} {
      allow read, write: if request.auth != null;
    }
  }
}