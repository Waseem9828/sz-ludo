rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {

    // Deposits - users upload their own payment proof
    match /deposits/{userId}/{fileName} {
      allow read: if request.auth != null &&
                  (request.auth.uid == userId ||
                   get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin' ||
                   get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'finance' ||
                   get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'support');
                   
      allow write: if request.auth != null
                   && request.auth.uid == userId
                   && request.resource.size < 10 * 1024 * 1024
                   && request.resource.contentType.matches('image/.*');
    }

    // Game screenshots - authenticated users can read/write
    match /screenshots/{gameId}/{fileName} {
      allow read: if request.auth != null;
      allow write: if request.auth != null
                   && request.resource.size < 10 * 1024 * 1024
                   && request.resource.contentType.matches('image/.*');
    }

    // Banners, home cards, etc. - only admin can write, public read
    match /banners/{folder}/{fileName} {
      allow read: if true;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin';
    }
    
    match /homecards/{fileName} {
      allow read: if true;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin';
    }
    
    match /tournaments/{fileName} {
       allow read: if true;
       allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin';
    }

    // Referral images (public read)
    match /referral/{fileName} {
      allow read: if true;
      // Allow any authenticated user to write their referral image (if this feature is added)
      // Or restrict to admin: get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin'
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin';
    }

    // Default deny everything else
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
