
rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    
    function isAuth() {
      return request.auth != null && request.auth.uid != null;
    }
    
    // --- Profile Pictures ---
    // Anyone authenticated can read, but only the user can write their own profile picture.
    match /avatars/{userId}/{fileName} {
      allow read: if isAuth();
      allow write: if isAuth() && request.auth.uid == userId;
    }

    // --- Deposit Screenshots ---
    // Only the authenticated user can upload a screenshot for their own deposit request.
    // The file path must match `deposits/{userId}/{timestamp}_{fileName}` from the client code.
    match /deposits/{userId}/{fileName} {
        allow read: if isAuth(); // Allows admin to view later.
        allow write: if isAuth() && request.auth.uid == userId;
    }

    // --- Game Winning Screenshots ---
    // Only an authenticated user can upload a screenshot for a game they are part of.
    // The path should be like `screenshots/{gameId}/{timestamp}_{userId}`
    match /screenshots/{gameId}/{fileName} {
      allow read: if isAuth();
      allow write: if isAuth(); // Simplified: assume backend verifies user is in game.
    }
    
    // --- Admin Uploaded Banners (e.g., for tournaments, home page cards) ---
    // Allow write access only to authenticated users (assuming only admins can trigger this upload via a secure function).
    // The path is like `banners/{folder}/{timestamp}_{fileName}`
    match /banners/{folder}/{fileName} {
        allow read: true; // Banners are public
        allow write: if isAuth(); // Admin uploads
    }

  }
}
