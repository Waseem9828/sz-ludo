
rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {

    // Helper function to check if a user is the owner of the resource
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Deposits: Only the user can upload to their own deposit folder.
    match /deposits/{userId}/{fileName} {
      allow read: if isOwner(userId);
      allow create: if isOwner(userId)
                    && request.resource.size < 10 * 1024 * 1024 // 10 MB limit
                    && request.resource.contentType.matches('image/.*');
      allow delete: if isOwner(userId);
    }
    
    // Game Screenshots: Any authenticated user can upload, as both players might need to.
    // The path is secured by a random gameId.
    match /screenshots/{gameId}/{fileName} {
       allow create: if request.auth != null
                    && request.resource.size < 10 * 1024 * 1024 // 10 MB limit
                    && request.resource.contentType.matches('image/.*');
    }

    // Banners (for Admin): Any authenticated user can upload to the banners folder.
    // This assumes an admin role check is handled in the app/security rules for who can access the upload UI.
    match /banners/{folder}/{fileName} {
        allow read; // Allow public read for banners
        allow write: if request.auth != null;
    }
    
     // Home Cards (for Admin):
    match /homecards/{fileName} {
        allow read;
        allow write: if request.auth != null;
    }
    
    // Tournaments (for Admin):
    match /tournaments/{fileName} {
        allow read;
        allow write: if request.auth != null;
    }
    
    // Referral Image (for Admin):
     match /referral/{fileName} {
        allow read;
        allow write: if request.auth != null;
    }
  }
}
