rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      // A user can only create their own user document.
      allow create: if request.auth != null && request.auth.uid == userId;
      
      // A user can only read or update their own document.
      allow read, update: if request.auth != null && request.auth.uid == userId;
      
      // No user should be able to delete their own account from the client.
      allow delete: if false;
    }

    match /transactions/{transactionId} {
      // A user can only create a transaction record for themselves.
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      
      // A user can only read their own transactions.
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      
      // Transactions are immutable from the client.
      allow update, delete: if false;
    }
    
    match /games/{gameId} {
       // Anyone authenticated can read game challenges and ongoing games.
       allow read: if request.auth != null;
       
       // Rules for creating, updating, and deleting games.
       allow create, update, delete: if request.auth != null;
    }
    
    match /deposits/{depositId} {
       // A user can only create a deposit request for themselves.
       allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;

       // Reading deposit requests should be an admin-only task.
       allow read, update, delete: if false;
    }

    match /withdrawals/{withdrawalId} {
        // A user can only create a withdrawal request for themselves.
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      
      // Reading/updating withdrawal requests should be an admin-only task from the client.
      allow read, update, delete: if false;
    }

    match /notifications/{notificationId} {
      // All authenticated users can read notifications.
      allow read: if request.auth != null;

      // Only admins should create notifications (handled via admin panel/backend).
      allow create, update, delete: if false; 
    }
    
    match /users/{userId}/userNotifications/{notificationId} {
        // A user can create/update their own notification read status.
        allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /settings/{docId} {
      // All authenticated users can read settings.
      allow read: if request.auth != null;

      // Only admins should write settings (handled via admin panel/backend).
      allow write: if false;
    }

    match /tournaments/{tournamentId} {
        // Anyone authenticated can read tournament details.
        allow read: if request.auth != null;

        // Joining (update) is handled via backend logic, but we can restrict direct client updates if needed.
        // For simplicity, allowing updates if authenticated. More complex logic can be added.
        allow update: if request.auth != null;

        // Creation/deletion should be admin only.
        allow create, delete: if false;
    }
  }
}
