rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Default deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }

    // Settings are public readable, but only admin can write
    match /settings/{docId} {
      allow read: if true;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin';
    }

    // Notifications are public readable, but only admin can write
    // User-specific notification statuses are handled in the users rule
    match /notifications/{notificationId} {
        allow read: if true;
        allow create: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin';
        allow update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin';
    }

    // Users can create their own doc, and only read/update their own doc.
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null; // Allow any authenticated user to create their own user document
      
       // Rules for user-specific subcollections
      match /userNotifications/{notificationId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // Transactions can be created by the user, but only read by that same user.
    match /transactions/{transactionId} {
       allow read: if request.auth != null && resource.data.userId == request.auth.uid;
       allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // Games can be read/listed by anyone logged in.
    // Create/update is allowed for logged-in users.
    match /games/{gameId} {
        allow read, list: if request.auth != null;
        allow create, update, delete: if request.auth != null;
    }

    // Deposits can be created and read by admins. Users can create them via functions.
    // Allow any authenticated user to create a deposit request.
    match /deposits/{depositId} {
        allow read: if request.auth != null;
        allow create, update: if request.auth != null;
    }
    
    // Withdrawals can be created by users, read/updated by admins.
    match /withdrawals/{withdrawalId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
        allow update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['superadmin', 'finance'];
    }
    
    // Tournaments are public readable, but writable only by admin
    match /tournaments/{tournamentId} {
        allow read, list: if true;
        allow create, update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin';
        // Joining a tournament is an update operation, allow any authenticated user
        allow update: if request.auth != null;
    }
  }
}