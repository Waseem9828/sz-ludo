
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    function isAuth() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuth() && request.auth.uid == userId;
    }
    
    function isRole(role) {
      return isAuth() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }
    
    function isAnyRole(roles) {
      return isAuth() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in roles;
    }

    match /users/{userId} {
      allow read: if isAuth();
      allow list: if isAnyRole(['superadmin', 'support', 'finance']);
      allow create: if isAuth() && isOwner(userId);
      allow update: if isOwner(userId) || isAnyRole(['superadmin', 'finance']);
    }

    match /games/{gameId} {
      allow read, get: if isAuth();
      allow list: if isAuth();
      allow create: if isAuth();
      allow update: if isAuth() || isAnyRole(['superadmin', 'finance']);
      allow delete: if isAuth() && (
        resource.data.createdBy.uid == request.auth.uid || 
        isAnyRole(['superadmin'])
      );
    }
    
    match /transactions/{transactionId} {
      allow read: if isAuth() && (
        isOwner(resource.data.userId) || 
        isAnyRole(['superadmin', 'support', 'finance'])
      );
      allow list: if isAnyRole(['superadmin', 'support', 'finance']);
      // Allow user to create their own initial signup transaction, and admins to create any.
      allow create: if isAuth() && (isOwner(request.resource.data.userId) || isAnyRole(['superadmin', 'finance']));
    }
    
    match /withdrawals/{withdrawalId} {
        allow read, list: if isAnyRole(['superadmin', 'finance']);
        allow create: if isAuth();
        allow update: if isAnyRole(['superadmin', 'finance']);
    }

    match /deposits/{depositId} {
        allow read, list: if isAnyRole(['superadmin', 'finance']);
        allow create: if isAuth();
        allow update: if isAnyRole(['superadmin', 'finance']);
    }
    
    match /tournaments/{tournamentId} {
        allow read, list: if isAuth();
        allow create, update, delete: if isAnyRole(['superadmin']);
    }
    
    // Notifications can be read by any authenticated user, but only created/managed by admin roles.
    match /notifications/{notificationId} {
      allow read, list: if isAuth();
      allow create, update, delete: if isAnyRole(['superadmin', 'support']);
    }
    
    // User-specific read status for notifications
    match /users/{userId}/userNotifications/{notificationId} {
        allow read, write: if isOwner(userId);
    }

    match /settings/{docId} {
      allow read: if true; // All users can read settings
      allow write: if isAnyRole(['superadmin']);
    }
  }
}
