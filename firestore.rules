
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      allow read: if request.auth != null;
      allow update, delete: if request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin';
      allow create: if request.auth != null;
    }
    
    match /games/{gameId} {
      allow read: if request.auth != null;
      // Anyone can create a challenge
      allow create: if request.auth != null && request.resource.data.status == 'challenge' && request.resource.data.createdBy.uid == request.auth.uid;
      // Only players in the game or admins can update
      allow update: if request.auth != null && (request.auth.uid in resource.data.playerUids || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['superadmin', 'support']);
      allow delete: if request.auth.uid == resource.data.createdBy.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin';
    }

    match /transactions/{transactionId} {
        allow read: if request.auth != null && (request.auth.uid == resource.data.userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['superadmin', 'finance']);
        // Only backend/admin can create/update transactions
        allow create, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['superadmin', 'finance'];
    }

    match /settings/{docId} {
        allow read: if request.auth != null;
        allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin';
    }

    match /notifications/{notificationId} {
        allow read: if request.auth != null;
        allow create, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['superadmin', 'support'];
    }

    // Rules for user-specific notification read status subcollection
    match /users/{userId}/userNotifications/{notificationId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    match /deposits/{depositId} {
        allow read: if request.auth != null && (request.auth.uid == resource.data.userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['superadmin', 'finance']);
        allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
        allow update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['superadmin', 'finance'];
    }
    
     match /withdrawals/{withdrawalId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == request.resource.data.userId;
      allow update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['superadmin', 'finance'];
    }

    match /tournaments/{tournamentId} {
      allow read: if request.auth != null;
      allow create, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin';
    }
  }
}
