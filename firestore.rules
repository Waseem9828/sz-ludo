
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isAuth() {
      return request.auth != null && request.auth.uid != null;
    }

    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }
    
    function isAdmin() {
      return isAuth() && getUserData().role in ['superadmin', 'finance', 'support'];
    }

    function isSuperAdmin() {
        return isAuth() && getUserData().role == 'superadmin';
    }

    function isFinanceAgent() {
        return isAuth() && getUserData().role in ['superadmin', 'finance'];
    }

    function isSupportAgent() {
        return isAuth() && getUserData().role in ['superadmin', 'support'];
    }
    
    // --- Collection Rules ---

    match /users/{userId} {
      allow read: if isAuth() && (request.auth.uid == userId || isAdmin());
      allow list: if isAdmin();
      allow create: if isAuth() && request.auth.uid == userId;
      allow update: if isAuth() && (
        (request.auth.uid == userId && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['displayName', 'photoURL', 'aadhaar', 'pan', 'bankAccount', 'ifsc', 'bankName', 'upiId', 'kycStatus'])) || 
        isAdmin()
      );
    }
    
    match /games/{gameId} {
      allow read: if isAuth();
      allow list: if isAuth();
      allow create: if isAuth() && request.resource.data.createdBy.uid == request.auth.uid;
      allow update: if isAuth(); // Complex logic is handled in backend transactions
      allow delete: if isAuth() && resource.data.createdBy.uid == request.auth.uid;
    }

    match /transactions/{transactionId} {
      allow read: if isAuth() && (request.auth.uid == resource.data.userId || isAdmin());
      allow list: if isAdmin();
      allow create: if isAuth() && request.resource.data.userId == request.auth.uid; // Allows user to create their own transaction log
    }

    match /withdrawals/{withdrawalId} {
        allow read: if isAuth() && (request.auth.uid == resource.data.userId || isFinanceAgent());
        allow list: if isFinanceAgent();
        allow create: if isAuth() && request.resource.data.userId == request.auth.uid;
        allow update: if isFinanceAgent();
    }
    
    match /deposits/{depositId} {
        allow read: if isAuth() && (request.auth.uid == resource.data.userId || isFinanceAgent());
        allow list: if isFinanceAgent();
        allow create: if isAuth() && request.resource.data.userId == request.auth.uid;
        allow update: if isFinanceAgent();
    }

    match /settings/{docId} {
      allow read: if isAuth();
      allow write: if isSuperAdmin();
    }

    match /notifications/{notificationId} {
        allow read, list: if isAuth();
        allow write: if isSuperAdmin();
    }

    // User's own notification read status subcollection
    match /users/{userId}/userNotifications/{notificationId} {
        allow read, write: if isAuth() && request.auth.uid == userId;
    }

    match /tournaments/{tournamentId} {
      allow read, list: if isAuth();
      allow create, update, delete: if isSuperAdmin();
    }
  }
}
