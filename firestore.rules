
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Allow users to create their own document, and only read/update their own document.
    match /users/{userId} {
      allow create: if request.auth != null && request.auth.uid == userId;
      allow read, update: if request.auth != null && request.auth.uid == userId;
      allow delete: if false; // Users cannot delete their own accounts from the client.
    }

    // Allow users to create transactions for themselves. No one can read/update/delete.
    match /transactions/{transactionId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read, update, delete: if false; // Transactions are immutable from the client.
    }

    // Games can be created by anyone logged in.
    // Ongoing games can be updated by either player.
    // Other statuses can only be modified by admins (via backend).
    match /games/{gameId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow update: if request.auth != null && (
                      (resource.data.status == 'challenge' && request.auth.uid == resource.data.createdBy.uid) ||
                      (request.auth.uid in resource.data.playerUids)
                    );
      allow delete: if request.auth != null && request.auth.uid == resource.data.createdBy.uid;
    }
    
    // Deposit requests can be created by the user for themselves.
    // Admins will handle updates via backend.
    match /deposits/{depositId} {
        allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
        allow read, update, delete: if false; // Handled by admin backend
    }
    
    // Withdrawal requests can be created by the user for themselves.
    // Admins/Agents will handle updates via backend.
    match /withdrawals/{withdrawalId} {
        allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
        allow read, update, delete: if false; // Handled by admin backend
    }

    // Notifications can be read by anyone logged in.
    // User-specific notification status is private.
    match /notifications/{notificationId} {
      allow read: if request.auth != null;
      allow create, update, delete: if false; // Admin only via backend
    }
    
    match /users/{userId}/userNotifications/{notificationId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Tournaments can be read by anyone. Joining/updating is handled by backend logic.
    match /tournaments/{tournamentId} {
        allow read: if request.auth != null;
        allow create, update, delete: if false; // Admin only via backend
    }

    // Settings are read-only for authenticated users.
    match /settings/{docId} {
      allow read: if request.auth != null;
      allow write: if false; // Can only be written by admin backend
    }
  }
}
