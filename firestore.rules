
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin roles
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['superadmin', 'finance', 'support'];
    }
    
    function isSuperAdmin() {
       return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin';
    }

    function isFinanceAgent() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['superadmin', 'finance'];
    }

    // Default Deny: Disallow all reads and writes by default.
    match /{document=**} {
      allow read, write: if false;
    }

    // Users Collection
    match /users/{userId} {
      // Any authenticated user can read their own data.
      // Admins can read any user's data.
      allow read: if (request.auth != null && request.auth.uid == userId) || isAdmin();

      // Users can update their own data, but cannot change sensitive fields like wallet or role.
      allow update: if request.auth != null && request.auth.uid == userId
                    && !(request.resource.data.wallet.balance != resource.data.wallet.balance)
                    && !(request.resource.data.wallet.winnings != resource.data.wallet.winnings)
                    && !(request.resource.data.role != resource.data.role);

      // Document creation is handled by a Cloud Function. No client-side creation allowed.
      allow create: if false;
      allow delete: if isSuperAdmin(); // Only superadmin can delete users
    }
    
    // Transactions Collection
    match /transactions/{transactionId} {
      // Users can read their own transactions. Admins can read all transactions.
      allow read: if (request.auth != null && resource.data.userId == request.auth.uid) || isAdmin();
      // Transactions are immutable from the client. They are only created by server-side logic (Cloud Functions or Admin SDK).
      allow write: if false;
    }

    // Games Collection
    match /games/{gameId} {
      // Anyone can read game listings.
      allow read: if true;
      // Users can create games (challenges).
      allow create: if request.auth != null;
      // Users can update games they are part of, but cannot change key fields themselves.
      allow update: if request.auth != null && request.auth.uid in resource.data.playerUids;
      // Only superadmin can delete games
      allow delete: if isSuperAdmin();
    }
    
    // Withdrawals Collection
    match /withdrawals/{withdrawalId} {
        // Users can read their own withdrawal requests.
        allow read: if (request.auth != null && resource.data.userId == request.auth.uid) || isFinanceAgent();
        // Users can create their own withdrawal requests.
        allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
        // Only Finance agents can update (assign/approve) withdrawals.
        allow update: if isFinanceAgent();
    }

    // Deposits Collection
    match /deposits/{depositId} {
        allow read: if (request.auth != null && resource.data.userId == request.auth.uid) || isFinanceAgent();
        allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
        allow update: if isFinanceAgent();
    }

    // Notifications Collection (Global)
    match /notifications/{notificationId} {
        allow read: if true; // All users can read global notifications.
        allow write: if isSuperAdmin(); // Only superadmin can create/update notifications.
    }
    
    // User-specific notification status
    match /users/{userId}/userNotifications/{notificationId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Settings Collection
    match /settings/{docId} {
        // All users can read settings
        allow read: if true;
        // Only superadmin can write to settings
        allow write: if isSuperAdmin();
    }
    
    // Tournaments Collection
    match /tournaments/{tournamentId} {
        allow read: if true;
        allow write: if isSuperAdmin(); // Only superadmin can create/update/delete tournaments.
    }
  }
}
