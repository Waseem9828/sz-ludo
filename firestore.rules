
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Default deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }
    
    // Users can read/update/delete their own document, but CANNOT create it.
    // Creation is handled by a Cloud Function for security and reliability.
    match /users/{userId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      allow create: if false; // Creation is server-side only
    }

    // Users can create transactions for themselves, and read their own.
    // No one can update or delete transactions to maintain a clean audit trail.
    match /transactions/{transactionId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      allow update, delete: if false;
    }

    // Settings can only be read by authenticated users. Only admins can write.
    // `get()` is used to check the user's role from their own document.
    match /settings/{docId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['superadmin', 'finance'];
    }

    // Only authenticated users can read game data.
    // Writes (create, update) are handled by server-side logic (Cloud Functions or secure backend).
    match /games/{gameId} {
        allow read: if request.auth != null;
        allow create, update, delete: if request.auth != null; // Temporarily allow for client-side logic
    }
    
    // Users can create their own deposit requests. Only admins can read/update them.
    match /deposits/{depositId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read, update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['superadmin', 'finance'];
    }

    // Users can create their own withdrawal requests. Only admins can read/update them.
    match /withdrawals/{withdrawalId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read, update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['superadmin', 'finance'];
    }

    // Notifications can be read by any authenticated user. Only admins can create them.
    match /notifications/{notificationId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['superadmin', 'support'];
        allow update, delete: if false;
    }
    
    // Users can manage their own notification read status.
    match /users/{userId}/userNotifications/{notificationId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Tournaments can be read by anyone authenticated. Only admins can write.
    match /tournaments/{tournamentId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin';
    }
  }
}
