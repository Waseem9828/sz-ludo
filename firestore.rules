
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check for admin roles
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['superadmin', 'finance', 'support'];
    }
    
    function isSuperAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin';
    }

    // Users can create their own document, and read/update their own data.
    // Admins can read/write any user data.
    match /users/{userId} {
      allow get: if request.auth.uid == userId || isAdmin();
      allow list: if isAdmin();
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId || isSuperAdmin();
      allow delete: if isSuperAdmin();
      
      // Rules for user-specific subcollections like 'userNotifications'
      match /{subcollection}/{docId} {
        allow read, write: if request.auth.uid == userId;
      }
    }

    // Games can be read by anyone authenticated.
    // Writes (create, update) are handled by backend logic (runTransaction)
    // so we can be more permissive here, as long as user is authenticated.
    match /games/{gameId} {
      allow read, create, update: if request.auth != null;
      allow delete: if isSuperAdmin(); // Only admin can delete games directly
    }

    // Deposits can only be created by users and managed by admins.
    match /deposits/{depositId} {
       allow create: if request.auth.uid == request.resource.data.userId;
       allow read, update: if isAdmin();
    }
    
    // Withdrawals can only be created by users and managed by admins.
    match /withdrawals/{withdrawalId} {
       allow create: if request.auth.uid == request.resource.data.userId;
       allow read, update: if isAdmin();
    }

    // Transactions are created by backend logic.
    // Users can only read their own transactions. Admins can read all.
    match /transactions/{transactionId} {
      allow read: if request.auth.uid == resource.data.userId || isAdmin();
      // Writes are handled by backend logic (Cloud Functions/runTransaction)
      allow write: if false; 
    }
    
    // Tournaments can be read by anyone.
    // Only admins can create, update, or delete them.
    match /tournaments/{tournamentId} {
      allow read: if request.auth != null;
      allow create, update, delete: if isSuperAdmin();
    }

    // Notifications are read-only for users.
    // Only admins can create/update notifications.
    match /notifications/{notificationId} {
      allow read: if request.auth != null;
      allow write: if isSuperAdmin();
    }
    
    // Settings are read-only for users.
    // Only superadmins can change settings.
    match /settings/{settingId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
  }
}

    