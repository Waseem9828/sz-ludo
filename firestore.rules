rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAuth() {
      return request.auth != null;
    }

    function isAdmin() {
      // Check for custom claims on the token.
      return request.auth.token.role in ['superadmin', 'finance', 'support'];
    }
    
    function isSuperAdmin() {
        return request.auth.token.role == 'superadmin';
    }

    // Settings can be read by anyone, but only written by admin
    match /settings/{docId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }
    
    // Notifications can be read by anyone, but only written by admin
    match /notifications/{docId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    match /users/{userId} {
      // Allow list for admins, allow get for self or admins.
      allow list: if isAuth() && isAdmin();
      allow get: if isAuth() && (request.auth.uid == userId || isAdmin());

      // A user can create their own document, or an admin can create one.
      allow create: if isAuth();

      // A user can update their own document, or an admin can update any.
      allow update: if isAuth() && (request.auth.uid == userId || isAdmin());
      
      // Only superadmins can delete users.
      allow delete: if isSuperAdmin();

      // User can manage their own notifications status
      match /userNotifications/{notificationId} {
        allow read, write: if isAuth() && request.auth.uid == userId;
      }
    }

    match /transactions/{transactionId} {
        // User can create their own transactions, admins can read any.
        allow create: if isAuth() && request.resource.data.userId == request.auth.uid;
        allow get, list: if isAuth() && (resource.data.userId == request.auth.uid || isAdmin());
        allow update, delete: if isAdmin();
    }

    match /games/{gameId} {
        allow get, list: if isAuth();
        allow create: if isAuth();
        allow update: if isAuth();
        allow delete: if isAdmin();
    }

    match /withdrawals/{withdrawalId} {
        allow get, list: if isAuth();
        allow create: if isAuth() && request.resource.data.userId == request.auth.uid;
        allow update, delete: if isAdmin();
    }

    match /deposits/{depositId} {
        allow get, list: if isAuth();
        allow create: if isAuth() && request.resource.data.userId == request.auth.uid;
        allow update, delete: if isAdmin();
    }
    
    match /tournaments/{tournamentId} {
        allow get, list: if true;
        allow create, update, delete: if isSuperAdmin();
    }
  }
}
