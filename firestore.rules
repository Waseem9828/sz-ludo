
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // USER COLLECTION
    // Users can only read and write their own data.
    // New users can be created if the request is authenticated.
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // TRANSACTIONS COLLECTION
    // Users can create transactions for themselves.
    // Users can only read their own transactions.
    match /transactions/{docId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
    }
    
    // GAMES COLLECTION
    // Anyone authenticated can create a challenge (game).
    // Updates can only be made by players in the game.
    match /games/{gameId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid in resource.data.playerUids;
    }
    
    // DEPOSITS COLLECTION
    // Users can create deposit requests for themselves.
    // Only authenticated users can create requests.
    match /deposits/{depositId} {
       allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
       // Admin rules would be needed here for read/update if not handled by trusted server environment
    }
    
    // WITHDRAWALS COLLECTION
    // Users can create withdrawal requests for themselves.
    match /withdrawals/{withdrawalId} {
       allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
       // Admin rules would be needed here for read/update if not handled by trusted server environment
    }
    
    // NOTIFICATIONS COLLECTION
    // Main notifications are read-only for clients.
    match /notifications/{notificationId} {
      allow read: if true;
      allow write: if false; // Only admin SDK should write here.
    }
    
    // User-specific notification status subcollection
    match /users/{userId}/userNotifications/{notificationId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // SETTINGS COLLECTION
    // Settings are public to read for all users.
    // Write access should be restricted to admin SDK.
    match /settings/{docId} {
      allow read: if true;
      allow write: if false; // Should only be updated from admin panel
    }
    
    // TOURNAMENTS COLLECTION
    // Read is public. Join/update actions are protected.
     match /tournaments/{tournamentId} {
      allow read: if true;
      // Allow authenticated users to join (update players array)
      allow update: if request.auth != null && request.auth.uid in request.resource.data.players;
      allow create, delete: if false; // Admin only
    }
  }
}
