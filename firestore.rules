rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['superadmin', 'finance', 'support'];
    }
    
    function isSuperAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin';
    }

    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    match /users/{userId} {
      allow read, update: if isOwner(userId) || isAdmin();
      allow create: if request.auth != null;
    }

    match /games/{gameId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      // Allow players in the game or an admin to update/delete
      allow update, delete: if isAdmin() || (request.auth != null && request.auth.uid in resource.data.playerUids);
    }
    
    match /transactions/{transactionId} {
        // Only the user themselves or an admin can read their transactions.
        allow read: if isAdmin() || isOwner(resource.data.userId);
        // Transactions are created by the backend (or trusted client logic like a secure function)
        allow create, update, delete: if isAdmin();
    }
    
    match /tournaments/{tournamentId} {
        allow read: if request.auth != null; // All authenticated users can read tournaments
        allow create, update, delete: if isSuperAdmin(); // Only superadmins can manage tournaments
    }

    match /settings/{settingId} {
        allow read: if true; // Allow anyone to read settings
        allow write: if isSuperAdmin(); // Only superadmins can write to settings
    }

     match /notifications/{notificationId} {
        allow read: if request.auth != null;
        allow create: if isSuperAdmin();
     }

     match /withdrawals/{withdrawalId} {
        allow read: if isAdmin() || isOwner(resource.data.userId);
        allow create: if isOwner(resource.data.userId);
        allow update, delete: if isAdmin();
     }

     match /deposits/{depositId} {
        allow read: if isAdmin() || isOwner(resource.data.userId);
        allow create: if isOwner(resource.data.userId);
        allow update, delete: if isAdmin();
     }
  }
}
